name: Update release with new tag and assets

on:
  workflow_call:
    inputs:
      asset_creation_script:
        required: true
        type: string
      post_script:
        required: false
        type: string

jobs:
  update_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Get PR title and body'
        run: |
          continue=true
          pr_title="${{ github.event.pull_request.title }}"

          pr_body="${{ github.event.pull_request.body }}"
          [ -z "${pr_body}" ] && continue=false
          
          echo "PR_TITLE="${pr_title}"" >> $GITHUB_ENV
          echo "PR_BODY="${pr_body}"" >> $GITHUB_ENV
          echo "CONTINUE="${continue}"" >> $GITHUB_ENV

      - uses: AsasInnab/regex-action@v1
        name: 'Get tickets ids from PR body'
        id: regex-match-tickets
        with:
          regex_pattern: '(?<=(Tickets:))[ |:|\\]*(?<value>[a-zA-Z0-9_.,\ -]*)(?=[ |\\]|$)'
          regex_flags: gm
          search_string: ${{ env.PR_BODY }}

      - uses: AsasInnab/regex-action@v1
        name: 'Get Release level from PR body'
        id: regex-match-release
        with:
          regex_pattern: '(?<=(Release:))[ |:|\\]*(?<value>[M|m|p]*)(?=[ |\\]|$)'
          regex_flags: gm
          search_string: ${{ env.PR_BODY }}

      - name: 'Check SemVer update option, add to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          option="${{ steps.regex-match-release.outputs.first_match }}"
          [ -z "${option}" ] && echo "CONTINUE=false" >> $GITHUB_ENV
          echo "OPTION="${option}"" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-get-latest-tag@v1
        name: 'Get last SemVer tag'
        id: get-latest-tag
        if: ${{ env.CONTINUE == 'true' }}
      - name: 'Add last tag to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          old_tag="${{ steps.get-latest-tag.outputs.tag }}"
          [ -z "${old_tag}" ] && old_tag=v0.0.0
          echo "OLD_TAG="${old_tag}"" >> $GITHUB_ENV

      - name: 'Get level from option'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          case `echo $OPTION | xargs` in
            M) level="major";;
            m) level="minor";;
            p) level="patch";;
          esac
          echo "LEVEL="${level}"" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-bump-semver@v1
        name: 'Update SemVer tag' 
        id: bump-semver-patch
        if: ${{ env.CONTINUE == 'true' }}
        with:
          current_version: ${{ env.OLD_TAG }}
          level: ${{ env.LEVEL }}
      - name: 'Add new to tag to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          echo "NEW_TAG=${{ steps.bump-semver-patch.outputs.new_version }}" >> $GITHUB_ENV

      - name: 'Create assets'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          eval ${{ inputs.asset_creation_script }}
          echo "$(ls -la)"

      - uses: meeDamian/github-release@2.0
        name: 'Update Release'
        if: ${{ env.CONTINUE == 'true' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_TAG }}
          name: Release ${{env.NEW_TAG}}
          body: ${{ env.PR_BODY }}
          gzip: folders
          files: ${{ env.FILES }}

      - name: 'Post release script'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          eval ${{ inputs.post_script }}

      - name: 'Ticket links, blocks for slack notification'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          tickets="${{ steps.regex-match-tickets.outputs.first_match }}"
          tickets=`echo $tickets | xargs` # Removed whitespaces
          IFS=', ' read -r -a tickets_array <<< "$tickets"

          blocks=""

          for index in "${!tickets_array[@]}"
          do
            blocks="${blocks},
                    {\"type\": \"mrkdwn\",
                      \"text\": \"*Ticket ${index}:* <https://mondu.atlassian.net/browse/${tickets_array[index]}| ${tickets_array[index]}>\"
                    }"
          done

          echo "TICKETS_BLOCKS="${blocks}"" >> $GITHUB_ENV

      - uses: slackapi/slack-github-action@v1.23.0
        name: 'Send update to slack #release-alerts channel on success'
        if: ${{ success() && env.CONTINUE == 'true' }}
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Release update finished with success"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* <https://github.com/${{ github.repository }}/tree/${{ github.event.repository.default_branch }}/|${{ github.event.repository.default_branch }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Pull Request:* <https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|${{ env.PR_TITLE }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}|${{ github.event.pull_request.head.sha }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag:* ${{ env.NEW_TAG}}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Release:* <https://github.com/${{ github.repository }}/releases/tag/${{ env.NEW_TAG}}| Files>"
                    }
                    ${{ env.TICKETS_BLOCKS }}
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - uses: slackapi/slack-github-action@v1.23.0
        name: 'Send update to slack #release-alerts channel on failure'
        if: ${{ failure() }}
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Release update cancelled with failure"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* <https://github.com/${{ github.repository }}/tree/${{ github.event.repository.default_branch }}/|${{ github.event.repository.default_branch }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Pull Request:* <https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|${{ env.PR_TITLE }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}|${{ github.event.pull_request.head.sha }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | Failed job>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
